import Head from "next/head";
import { Inter } from "next/font/google";
import { useDispatch, useSelector } from "react-redux";
import { decrement, increment, setInputValue, clearErrorMessage, setErrorMessage} from "./redux/slices";
import { selectCounter, selectErrorMessage, selectInputValue } from "./redux/selectors";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const dispatch = useDispatch();
  const count = useSelector(selectCounter);
  const inputValue = useSelector(selectInputValue);
  const errorMessage = useSelector(selectErrorMessage)

  const handleInputChange = (e: { target: { value: string; }; }) => {
    if(parseInt(e.target.value)>=0){
      dispatch(setInputValue(e.target.value));
    }else{
      dispatch(setInputValue(0));
    }
  };

  const handleIncrement = () => {
    const value = parseInt(inputValue);
    if(!isNaN(value)) {
      dispatch(increment(value));
      dispatch(setInputValue(''));
      dispatch(clearErrorMessage());
    } else {
      dispatch(setErrorMessage("Non puoi incrementare un valore NaN"));
    }
  }

  const handleDecrement = () => {
    const value = parseInt(inputValue);
    if(!isNaN(value)){
      dispatch(decrement(value));
      dispatch(setInputValue(''));
      if(value > count){
        dispatch(setErrorMessage("Non puoi andare sotto lo zero"))
      }else{
        dispatch(clearErrorMessage());
      }
    } else{
      dispatch(setErrorMessage("Non puoi decrementare un valore NaN"));
    } 
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>
      <main>
        <input type="number" value={inputValue} onChange={handleInputChange}></input>
        <button onClick={handleIncrement}>Increment</button>
        <button onClick={handleDecrement}>Decrement</button>
        { errorMessage && <p>{errorMessage}</p> }
        <div>
          Value: {count}
        </div>
      </main>
    </>
  );
}
